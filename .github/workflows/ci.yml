name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    - name: Run linting checks
      run: |
        echo "Running flake8..."
        flake8 src/ tests/ --max-line-length=120 --ignore=E203,E501,W503
        echo "Running black check..."
        black --check src/ tests/
        echo "Running isort check..."
        isort --check-only src/ tests/

    - name: Run type checking
      run: |
        echo "Running mypy..."
        mypy src/ --ignore-missing-imports --no-strict-optional

    - name: Run unit tests
      run: |
        echo "Running unit tests..."
        pytest tests/unit/ -v --cov=src/proxmox_redfish --cov-report=xml --cov-report=term-missing

    - name: Run integration tests
      run: |
        echo "Running integration tests..."
        pytest tests/integration/ -v --tb=short

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  security:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    - name: Run security checks
      run: |
        echo "Running bandit security scan..."
        bandit -r src/ -f json -o bandit-report.json || true
        echo "Running safety check..."
        safety check --json --output safety-report.json || true

    - name: Upload security reports
      uses: actions/upload-artifact@v3
      with:
        name: security-reports
        path: |
          bandit-report.json
          safety-report.json

  build:
    runs-on: ubuntu-latest
    needs: [test, security]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: |
        python -m build

    - name: Check package
      run: |
        twine check dist/*

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/

  docker:
    runs-on: ubuntu-latest
    needs: [test, security]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build Docker image
      run: |
        docker build -t proxmox-redfish:test .
        docker run --rm proxmox-redfish:test python -c "import proxmox_redfish; print('Import successful')"

  notify:
    runs-on: ubuntu-latest
    needs: [test, security, build, docker]
    if: always()

    steps:
    - name: Notify on failure
      if: failure()
      run: |
        echo "One or more CI jobs failed!"
        echo "Check the GitHub Actions logs for details." 